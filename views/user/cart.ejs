<%-include('../partials/header.ejs')%>
<%-include('../partials/topnav.ejs')%>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="index.html" rel="nofollow">Home</a>
                <span></span> Shop
                <span></span> Your Cart
            </div>
        </div>
    </div>
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <% if (products.length > 0) { %>
                        
                        <table class="table shopping-summery text-center clean">
                            <thead>
                                <tr class="main-heading">
                                    <th scope="col">Image</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Subtotal</th>
                                    <th scope="col">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                                    <% products.forEach(product => { %>
                                    <tr>
                                        <td class="image product-thumbnail"><img src="/uploads/<%= product.productId.image[0] %>" alt="<%= product.productName %>" style="max-width: 100px;"></td>
                                        <td class="product-name"><a href="/singleproduct?id=<%= product.productId._id %>"><%= product.productId.productName %></a></td>
                                        <td class="price" data-title="Price">Rs. <%= product.productId.price %></td>
                                        <td class="qty" data-title="Quantity">
                                            <div class="quantity-control">
                                                <button class="decrease-quantity" data-id="<%= product.productId._id %>">-</button>
                                                <span class="quantity-value"><%= product.quantity %></span>
                                                <button class="increase-quantity" data-id="<%= product.productId._id %>">+</button>
                                            </div>
                                        </td>
                                        <td class="subtotal" data-title="Subtotal">Rs. <%= product.productId.price * product.quantity %></td>
                                        <td class="action" data-title="Remove">
                                            <a href="#" class="remove-product" data-id="<%= product.productId._id %>">
                                                <i class="fi-rs-trash"></i>
                                            </a>
                                        </td>
                                    </tr>
                                    <% }) %>
                                
                                <tr>
                                    <td colspan="6" class="text-end">
                                        <a href="#" class="text-muted"> <i class="fi-rs-cross-small"></i> Clear Cart</a>
                                    </td>
                                </tr>
                                
                            </tbody>
                        </table>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center">Your cart is empty.</td>
                            </tr>
                        <% } %>
                    </div>
                    
                    <div class="divider center_icon mt-50 mb-50"><i class="fi-rs-fingerprint"></i></div>
                    <% if (products.length > 0) { %>
                    <div class="row mb-50">
                        <div class="col-lg-6 col-md-12">
                            <div class="border p-md-4 p-30 border-radius cart-totals">
                                <div class="heading_s1 mb-3">
                                    <h4>Cart Totals</h4>
                                </div>
                                <div class="table-responsive">
                                    <div class="table-responsive">
                                        <table class="table">
                                            <tbody>
                                                <tr>
                                                    <td class="cart_total_label">Cart Subtotal</td>
                                                    <td class="cart_total_amount"><span id="cart-subtotal" class="font-lg fw-900 text-brand">Rs. 0.00</span></td>
                                                </tr>
                                                <tr>
                                                    <td class="cart_total_label">Shipping</td>
                                                    <td class="cart_total_amount"> <i class="ti-gift mr-5"></i> Free Shipping</td>
                                                </tr>
                                                <tr>
                                                    <td class="cart_total_label">Total</td>
                                                    <td class="cart_total_amount"><strong><span id="cart-total" class="font-xl fw-900 text-brand">Rs. 0.00</span></strong></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <a href="/checkoutPage" class="btn"><i class="fi-rs-box-alt mr-10"></i> Proceed To CheckOut</a>
                            </div>
                        </div>
                    </div>
                    <% } %>
                </div>
            </div>
        </div>
    </section>
</main>
<%-include('../partials/bottomnav.ejs')%>
<%-include('../partials/footer.ejs')%>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Function to update the cart totals
        function updateCartTotals() {
            let subtotal = 0;
            document.querySelectorAll('.subtotal').forEach(subtotalElement => {
                subtotal += parseFloat(subtotalElement.textContent.replace('Rs. ', ''));
            });
            document.getElementById('cart-subtotal').textContent = 'Rs. ' + subtotal.toFixed(2);
            document.getElementById('cart-total').textContent = 'Rs. ' + subtotal.toFixed(2);
        }
    
        // Event listener for increasing quantity
        document.querySelectorAll('.increase-quantity').forEach(button => {
            button.addEventListener('click', function () {
                let productId = this.getAttribute('data-id');
                let quantityElement = this.previousElementSibling;
                let quantity = parseInt(quantityElement.textContent);
                updateQuantity(productId, quantity + 1, quantityElement);
            });
        });
    
        // Event listener for decreasing quantity
        document.querySelectorAll('.decrease-quantity').forEach(button => {
            button.addEventListener('click', function () {
                let productId = this.getAttribute('data-id');
                let quantityElement = this.nextElementSibling;
                let quantity = parseInt(quantityElement.textContent);
                if (quantity > 1) {
                    updateQuantity(productId, quantity - 1, quantityElement);
                }
            });
        });
    
        // Event listener for removing a product
        document.querySelectorAll('.remove-product').forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();
                let productId = this.getAttribute('data-id');
                let row = this.closest('tr');
    
                Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        removeProduct(productId, row);
                    }
                });
            });
        });
    
        // Function to update the quantity of a product
        function updateQuantity(productId, newQuantity, quantityElement) {
            // Ensure the quantity does not exceed 5
            if (newQuantity > 5) {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'You cannot add more than 5 of the same product to the cart.',
                });
                return;
            }
    
            // Update the quantity displayed in the UI
            quantityElement.textContent = newQuantity;
            
            // Find the relevant row and calculate the new subtotal
            let row = quantityElement.closest('tr');
            let price = parseFloat(row.querySelector('.price').textContent.replace('Rs. ', ''));
            let subtotalElement = row.querySelector('.subtotal');
            subtotalElement.textContent = 'Rs. ' + (price * newQuantity).toFixed(2);
    
            // Log details for debugging
            console.log("Product ID:", productId);
            console.log("New Quantity:", newQuantity);
            console.log("Price:", price);
            console.log("Subtotal Element:", subtotalElement);
    
            // Send a request to update the quantity in the database
            fetch(`/updatequantity`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId, quantity: newQuantity })
            }).then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            }).then(data => {
                if (!data.success) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Failed',
                        text: 'Failed to update the cart.',
                    });
                } else {
                    updateCartTotals(); // Recalculate the cart totals
                }
            }).catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        }
    
        // Function to remove a product from the cart
        function removeProduct(productId, row) {
            fetch(`/remove-from-cart`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ productId: productId })
            }).then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            }).then(data => {
                if (data.success) {
                    row.remove();
                    updateCartTotals(); // Recalculate the cart totals
                    Swal.fire(
                        'Removed!',
                        'The product has been removed from your cart.',
                        'success'
                    );
                    if (document.querySelectorAll('tbody tr').length === 1) {
                        location.reload();
                    }
                } else {
                    Swal.fire(
                        'Failed!',
                        'Failed to remove the product from your cart.',
                        'error'
                    );
                }
            }).catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        }
    
        // Initial calculation of cart totals
        updateCartTotals();
    });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
