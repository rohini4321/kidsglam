<%- include('../partials/header.ejs') %>
<%- include('../partials/topnav.ejs') %>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="index.html" rel="nofollow">Home</a>
                <span></span> Shop
                <span></span> Checkout
            </div>
        </div>
    </div>
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="address_box">
                        <div class="mb-20">
                            <h4>Address</h4>
                        </div>
                        <div class="address_content">
                            <% address.forEach(function(address, index) { %>
                                <div class="address-item d-flex" style="justify-content: space-between;" id="address-<%= index %>">
                                    <div>
                                    <input style="height: 20px; width: 20px;" type="radio" name="selectedAddress" id="addressRadio-<%= index %>" value="<%= address._id %>" <% if (index === 0) { %>checked<% } %> />
                                </div>
                                <div>
                                    <label for="addressRadio-<%= index %>" class="address-label">
                                        <p><%= address.StreetName %>, <%= address.City %>, <%= address.Landmark %>, <%= address.Pincode %> <%= address.Country %></p>
                                    </label>
                                </div>
                                <div>
                                    <button class="btn btn-sm btn-outline-primary edit-address-btn" data-index="<%= index %>" data-id="<%= address._id %>">Edit</button>
                                </div>
                                </div>
                                <hr>
                            <% }); %>
                            <button class="btn btn-sm btn-outline-success" id="add-new-address-btn">Add New Address</button>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="order_review">
                        <div class="mb-20">
                            <h4>Your Orders</h4>
                        </div>
                        <div class="table-responsive order_table text-center">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Product Image</th>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% let subTotal = 0; %>
                                    <% products.forEach(function(item) { %>
                                        <tr>
                                            <td class="image product-thumbnail"><img src="/uploads/<%= item.productId.image[0] %>" alt="<%=item.productId.name%>"></td>
                                            <td>
                                                <h5><%= item.productId.productName %></h5>
                                            </td>
                                            <td> <span class="product-qty"> <%= item.quantity %></span>
                                            </td>
                                            <td><%= item.productId.price * item.quantity %>/-</td>
                                        </tr>
                                        <% subTotal += item.productId.price * item.quantity; %>
                                    <% }); %>
                                    <tr>
                                        <th colspan="2">SubTotal</th>
                                        <td class="product-subtotal" colspan="2"><%= subTotal %></td>
                                    </tr>
                                    <tr>
                                        <th colspan="2">Shipping</th>
                                        <td colspan="2"><em>Free Shipping</em></td>
                                    </tr>
                                    <tr>
                                        <th colspan="2">Total</th>
                                        <td colspan="2" class="product-subtotal"><span class="font-xl text-brand fw-900"><%= subTotal %></span>/-</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="bt-1 border-color-1 mt-30 mb-30"></div>
                        <div class="payment_method">
                            <div class="mb-25">
                                <h5>Payment</h5>
                            </div>
                            <div class="payment_option">
                                <div class="custome-radio">
                                    <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios3" checked="">
                                    <label class="form-check-label" for="exampleRadios3" data-bs-toggle="collapse" data-target="#bankTranfer" aria-controls="bankTranfer">Razor Pay</label>
                                    <div class="form-group collapse in" id="bankTranfer">
                                        <p class="text-muted mt-5">There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration. </p>
                                    </div>
                                </div>
                                <div class="custome-radio">
                                    <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios4" checked="">
                                    <label class="form-check-label" for="exampleRadios4" data-bs-toggle="collapse" data-target="#checkPayment" aria-controls="checkPayment">COD</label>
                                    <div class="form-group collapse in" id="checkPayment">
                                        <p class="text-muted mt-5">Please send your cheque to Store Name, Store Street, Store Town, Store State / County, Store Postcode. </p>
                                    </div>
                                </div>
                                <div class="custome-radio">
                                    <input class="form-check-input" required="" type="radio" name="payment_option" id="exampleRadios5" checked="">
                                    <label class="form-check-label" for="exampleRadios5" data-bs-toggle="collapse" data-target="#paypal" aria-controls="paypal">Wallet</label>
                                    <div class="form-group collapse in" id="paypal">
                                        <p class="text-muted mt-5">Pay via PayPal; you can pay with your credit card if you don't have a PayPal account.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button id="place-order-btn" class="btn btn-fill-out btn-block mt-30">Place Order</button>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="edit-address-form">
                    <input type="hidden" id="addressId" name="addressId">
                    <div class="mb-3">
                        <label for="streetName" class="form-label">Street Name</label>
                        <input type="text" class="form-control" id="streetName" name="streetName">


<!-- Edit Address Modal -->
<div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="edit-address-form">
                    <input type="hidden" id="addressId" name="addressId">
                    <div class="mb-3">
                        <label for="streetName" class="form-label">Street Name</label>
                        <input type="text" class="form-control" id="streetName" name="streetName">
                    </div>
                    <div class="mb-3">
                        <label for="city" class="form-label">City</label>
                        <input type="text" class="form-control" id="city" name="city">
                    </div>
                    <div class="mb-3">
                        <label for="landmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="landmark" name="landmark">
                    </div>
                    <div class="mb-3">
                        <label for="pincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control" id="pincode" name="pincode">
                    </div>
                    <div class="mb-3">
                        <label for="country" class="form-label">Country</label>
                        <input type="text" class="form-control" id="country" name="country">
                    </div>
                    <button type="button" class="btn btn-primary" id="save-address-btn">Save changes</button>
                </form>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/bottomnav.ejs') %>
<%- include('../partials/footer.ejs') %>

<script>
    document.querySelectorAll('.edit-address-btn').forEach(button => {
        button.addEventListener('click', function() {
            const index = this.dataset.index;
            const addressId = this.dataset.id;
            const addressDetails = document.getElementById(`address-${index}`).querySelector('label p').innerText.split(', ');
            
            document.getElementById('addressId').value = addressId;
            document.getElementById('streetName').value = addressDetails[0];
            document.getElementById('city').value = addressDetails[1];
            document.getElementById('landmark').value = addressDetails[2];
            const pincodeCountry = addressDetails[3].split(' ');
            document.getElementById('pincode').value = pincodeCountry[0];
            document.getElementById('country').value = pincodeCountry[1];
            
            new bootstrap.Modal(document.getElementById('editAddressModal')).show();
        });
    });

    const saveAddressChanges = () => {
        const addressId = document.getElementById('addressId').value;
        const streetName = document.getElementById('streetName').value;
        const city = document.getElementById('city').value;
        const landmark = document.getElementById('landmark').value;
        const pincode = document.getElementById('pincode').value;
        const country = document.getElementById('country').value;

        fetch(`/address/${addressId}`, {
            method: 'PUT',  // Use PUT for updating existing resource
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ StreetName: streetName, City: city, Landmark: landmark, Pincode: pincode, Country: country })
        })
        .then(response => response.json())
        .then(data => {
            if (data.message === 'Address updated successfully') {
                location.reload(); // Reload the page to reflect changes
            } else {
                alert('Failed to update address. Please try again.');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Failed to update address. Please try again.');
        });
    };

    document.getElementById('save-address-btn').addEventListener('click', saveAddressChanges);

    document.getElementById('add-new-address-btn').addEventListener('click', function() {
        Swal.fire({
            title: 'Add New Address',
            html: `
                <form id="add-address-form">
                    <div class="mb-3">
                        <label for="newStreetName" class="form-label">Street Name</label>
                        <input type="text" class="form-control" id="newStreetName" name="newStreetName">
                    </div>
                    <div class="mb-3">
                        <label for="newCity" class="form-label">City</label>
                        <input type="text" class="form-control" id="newCity" name="newCity">
                    </div>
                    <div class="mb-3">
                        <label for="newLandmark" class="form-label">Landmark</label>
                        <input type="text" class="form-control" id="newLandmark" name="newLandmark">
                    </div>
                    <div class="mb-3">
                        <label for="newPincode" class="form-label">Pincode</label>
                        <input type="text" class="form-control" id="newPincode" name="newPincode">
                    </div>
                    <div class="mb-3">
                        <label for="newCountry" class="form-label">Country</label>
                        <input type="text" class="form-control" id="newCountry" name="newCountry">
                    </div>
                </form>
            `,
            showCancelButton: true,
            confirmButtonText: 'Add Address',
            preConfirm: () => {
                const newStreetName = document.getElementById('newStreetName').value;
                const newCity = document.getElementById('newCity').value;
                const newLandmark = document.getElementById('newLandmark').value;
                const newPincode = document.getElementById('newPincode').value;
                const newCountry = document.getElementById('newCountry').value;

                if (!newStreetName || !newCity || !newLandmark || !newPincode || !newCountry) {
                    Swal.showValidationMessage('Please fill in all fields');
                    return false;
                }

                return { newStreetName, newCity, newLandmark, newPincode, newCountry };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const { newStreetName, newCity, newLandmark, newPincode, newCountry } = result.value;

                fetch(`/addaddress`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        StreetName: newStreetName,
                        City: newCity,
                        Landmark: newLandmark,
                        Pincode: newPincode,
                        Country: newCountry
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Address Added',
                            text: 'Your new address has been added successfully!',
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: data.message,
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to add address. Please try again.',
                    });
                });
            }
        });
    });

    document.getElementById('place-order-btn').addEventListener('click', function() {
        const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked').value;
        // Add logic to handle the selected address when placing the order
        console.log("Selected address ID: ", selectedAddress);
        // Continue with your order placement logic, using the selected address ID
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById('place-order-btn').addEventListener('click', function() {
        const selectedAddressId = document.querySelector('input[name="selectedAddress"]:checked').value;
    
        // Fetch cart details from the backend
        fetch('/getCartDetails', {
            method: 'POST',
        })
        .then(response => response.json())
        .then(cartData => {
            if (cartData.success) {
                // Flatten the products into orderDetails
                const orderDetails = cartData.cartItems.map(product => {
                    if (!product.productId || !product.productId._id) {
                        throw new Error(`Invalid productId in product: ${JSON.stringify(product)}`);
                    }
                    return {
                        productId: product.productId._id,
                        quantity: product.quantity,
                        price:product.productId.price,
                        productName:product.productId.productName,
                        
                    };
                });
    
                // Fetch the selected address details
                return fetch(`/getAddressDetails/${selectedAddressId}`, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(addressData => {
                    if (addressData.success) {
                        const address = addressData.address;
    
                        // Send a request to check stock availability
                        return fetch('/checkStock', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ orderDetails })
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                // Stock is available, proceed with placing the order
                                return fetch('/placeOrder', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({
                                        address: address,
                                        orderDetails: orderDetails,
                                        paymentMethod: document.querySelector('input[name="payment_option"]:checked').id
                                    })
                                });
                            } else {
                                throw new Error(data.message || 'Stock is not available');
                            }
                        })
                        .then(response => response.json())
                        .then(orderData => {
                            if (orderData.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Order Placed',
                                    text: 'Your order has been placed successfully!',
                                    timer: 2000,
                                    showConfirmButton: false
                                }).then(() => {
                                    window.location.href = '/orderPage';
                                });
                            } else {
                                throw new Error(orderData.message || 'Failed to place order');
                            }
                        });
                    } else {
                        throw new Error('Failed to fetch address details');
                    }
                });
            } else {
                throw new Error('Failed to fetch cart details');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to process your request. Please try again.',
            });
        });
    });
    </script>
    