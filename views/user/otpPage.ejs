<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>OTP Verification</title>
<!-- Include SweetAlert CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.min.css">
<style>
    /* CSS Styles */
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    #otp-container {
        background-color: skyblue;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    #otp-container h2 {
        margin-bottom: 20px;
    }

    #otp-input {
        width: 200px;
        padding: 10px;
        margin-bottom: 10px;
    }

    #timer {
        font-size: 20px;
        margin-bottom: 20px;
    }

    button {
        padding: 10px 20px;
        background-color: #acc9e7;
        color: #250f57;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    button:hover {
        background-color: pink;
    }

    button:disabled {
        background-color: #cccccc;
        cursor: not-allowed;
    }

    #error-message {
        color: red;
        margin-top: 10px;
    }
</style>
</head>
<body>
<div id="otp-container">
    <h2>OTP Verification</h2>
    <form id="otp-form" method="post" onsubmit="return validateForm()">
        <input name="enteredOtp" type="text" id="otp-input" placeholder="Enter OTP" maxlength="6"><br>
        <button type="submit" id="submit-btn">Submit</button>
        <button type="button" id="resend-btn" onclick="resendOtp()" disabled>Resend</button>
    </form>
    <p id="timer">Timer: 60 seconds</p>
    <p id="error-message"></p>
    
</div>

<!-- Include SweetAlert JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.16.3/dist/sweetalert2.all.min.js"></script>
<script>
    let timerSeconds = 60;
    let timerInterval;
    let resendDisabled = true;
    let formSubmitted = false;

    function startTimer() {
        timerInterval = setInterval(function() {
            timerSeconds--;
            document.getElementById("timer").innerText = "Timer: " + timerSeconds + " seconds";
            if (timerSeconds <= 0) {
                clearInterval(timerInterval);
                document.getElementById("timer").innerText = "Time's up!";
                enableResendButton();
                disableSubmitButton();
            }
        }, 1000);
    }

    function enableResendButton() {
        document.getElementById("resend-btn").disabled = false;
        resendDisabled = false;
    }

    function disableResendButton() {
        document.getElementById("resend-btn").disabled = true;
        resendDisabled = true;
    }

    function disableSubmitButton() {
        document.getElementById("submit-btn").disabled = true;
    }

    function enableSubmitButton() {
        document.getElementById("submit-btn").disabled = false;
    }

    function validateForm() {
        const otpInput = document.getElementById("otp-input").value;
        const errorMessage = document.getElementById("error-message");

        // Check if the form has already been submitted
        if (formSubmitted) {
            errorMessage.innerText = "Form already submitted.";
            return false;
        }

        // Check if OTP is empty
        if (otpInput.trim() === "") {
            errorMessage.innerText = "Enter valid OTP";
            return false;
        }

        // Check if OTP is not a 6-digit number
        if (!/^\d{6}$/.test(otpInput)) {
            errorMessage.innerText = "Invalid OTP";
            return false;
        }

        // Clear error message if validation passes
        errorMessage.innerText = "";
        formSubmitted = true;
        disableSubmitButton();
        verifyOTP(otpInput);
        return false; // Prevent default form submission
    }

    function resendOtp() {
        if (!resendDisabled) {
            // Logic to resend OTP
            console.log("Resending OTP...");
            disableResendButton();
            timerSeconds = 60;
            startTimer();
            enableSubmitButton();

            // Use SweetAlert instead of default alert
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Another OTP has been sent.'
            });
        }
    }

    function verifyOTP(otp) {
        fetch('/verifyOtp', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ enteredOtp: otp })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            if (!data.error) {
                // If OTP is correct, redirect to homepage
                window.location.href = '/home';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            document.getElementById('error-message').textContent = 'Enter valid OTP.';
        });
    }

    // Start timer when the page loads
    startTimer();

</script>
</body>
</html>
