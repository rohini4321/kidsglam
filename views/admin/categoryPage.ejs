<%- include('../partials/adminheader.ejs') %> 
<style>
     .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
    .pagination a {
        margin: 0 5px;
        padding: 10px 15px;
        border: 1px solid #007bff;
        color: #007bff;
        text-decoration: none;
    }
    .pagination a.active {
        background-color: #007bff;
        color: white;
    }
</style>
<body>
    <div class="screen-overlay"></div>
    
    <aside class="navbar-aside" id="offcanvas_aside">
      <div class="aside-top">
          <a href="index.html" class="brand-wrap">
              <img src="/userAssets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard">
          </a>
          <div>
              <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i> </button>
          </div>
      </div>
      <nav>
          <ul class="menu-aside">
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/homePage2"> <i class="icon material-icons md-home"></i>
                      <span class="text">Dashboard</span>
                  </a>
              </li>
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/userManagement"> <i class="icon material-icons md-shopping_bag"></i>
                      <span class="text">User Management</span>
                  </a>
              </li>
              <li class="menu-item active ">
                  <a class="menu-link" href="/admin/categoryPage"> <i class="icon material-icons md-shopping_cart"></i>
                      <span class="text">Categories</span>
                  </a>
              </li>
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/productPage"> <i class="icon material-icons md-store"></i>
                      <span class="text">Products</span>
                  </a> 
              </li>
              <li class="menu-item ">
                  <a class="menu-link" href="/admin/orderPage"> <i class="icon material-icons md-add_box"></i>
                      <span class="text">Orders</span>
                  </a>
              </li>
          </ul>
          <br>
          <br>
      </nav>
  </aside>

    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                    <datalist id="search_terms">
                        <option value="Products">
                        <option value="New orders">
                        <option value="Apple iphone">
                        <option value="Ahmed Hassan">
                    </datalist>
                </form>
            </div>
        </header>
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Categories </h2>
                    <p>Add, edit or delete a category</p>
                </div>
                <div>
                    <input type="text" placeholder="Search Categories" class="form-control bg-white">
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <form>
                                <div class="mb-4">
                                  <label for="category_name" class="form-label">Name</label>
                                  <input type="text" placeholder="Type here" class="form-control" id="category_name" name="categoryName" />
                                </div>
                                <div class="d-grid">
                                  <button id="createCategoryForm" type="submit" class="btn btn-primary">Create category</button>
                                </div>
                            </form>
                        </div>
                        <div class="col-md-9">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>No</th>
                                            <th>Name</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if(category.length > 0) { %>
                                            <% for(let i = 0; i < category.length; i++) { %>
                                                <tr>
                                                    <td><%= i + 1 %></td>
                                                    <td><%= category[i].categoryName %></td>
                                                    <td>
                                                        <% if(category[i].isUnlisted) { %>
                                                            Unlisted
                                                        <% } else { %>
                                                            Active
                                                        <% } %>
                                                    </td>
                                                    <td>
                                                        <button type="button" class="btn btn-primary" onclick="showEditModal('<%= category[i]._id %>', '<%= category[i].categoryName %>')">Edit</button>
                                                    </td>
                                                    <td>
                                                        <% if(category[i].isUnlisted) { %>
                                                            <button type="button" class="btn btn-success" onclick="updateCategoryStatus('<%= category[i]._id %>', false)">List</button>
                                                        <% } else { %>
                                                            <button type="button" class="btn btn-warning" onclick="updateCategoryStatus('<%= category[i]._id %>', true)">Unlist</button>
                                                        <% } %>
                                                    </td>
                                                </tr>
                                            <% } %>
                                        <% } else { %>
                                            <tr>
                                                <td colspan="6">Categories Not Found</td>
                                            </tr>
                                        <% } %>
                                    </tbody>
                                </table>
                            </div>
                            <div class="pagination">
                              <% if (page > 1) { %>
                                <a href="?page=<%= page - 1 %>&limit=<%= limit %>">Previous</a>
                              <% } %>
                              <% for (let i = 1; i <= totalPages; i++) { %>
                                <a href="?page=<%= i %>&limit=<%= limit %>" class="<%= page === i ? 'active' : '' %>"><%= i %></a>
                              <% } %>
                              <% if (page < totalPages) { %>
                                <a href="?page=<%= page + 1 %>&limit=<%= limit %>">Next</a>
                              <% } %>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      document.getElementById('createCategoryForm').addEventListener('click', function(event) {
        event.preventDefault();
        
        const categoryName = document.getElementById('category_name').value;
        console.log(categoryName);

        fetch('/admin/categoryPage', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ categoryName })
        })
        .then(response => {
          if (response.ok) {
            return response.json();
          } else if (response.status === 400) {
            throw new Error('Category already exists');
          } else {
            throw new Error('Failed to create category');
          }
        })
        .then(data => {
          console.log('Category created successfully:', data);
          Swal.fire({
            title: 'Success!',
            text: 'Category created successfully.',
            icon: 'success',
            confirmButtonText: 'OK'
          }).then(() => {
            window.location.reload();
          });
        })
        .catch(error => {
          console.error('Error creating category:', error);
          Swal.fire({
            title: 'Error',
            text: error.message,
            icon: 'error',
            confirmButtonText: 'OK'
          });
        });
      });

      function showEditModal(categoryId, currentName) {
        Swal.fire({
          title: 'Edit Category',
          input: 'text',
          inputValue: currentName,
          inputAttributes: {
            autocapitalize: 'off'
          },
          showCancelButton: true,
          confirmButtonText: 'Save',
          showLoaderOnConfirm: true,
          preConfirm: (newName) => {
            if (!newName) {
              Swal.showValidationMessage('Please enter a new name');
            } else {
              return fetch(`/admin/editcategory/${categoryId}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ newName })
              })
              .then(response => {
                if (response.status === 400) {
                  throw new Error('Category name already exists');
                } else if (!response.ok) {
                  throw new Error('Failed to update category');
                }
                return response.json();
              })
              .catch(error => {
                Swal.showValidationMessage(`Request failed: ${error.message}`);
              });
            }
          },
          allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
          if (result.isConfirmed) {
            Swal.fire(
              'Saved!',
              'Category name has been updated.',
              'success'
            );
            window.location.reload();
          }
        });
      }

      function updateCategoryStatus(categoryId, isUnlisted) {
        const action = isUnlisted ? 'unlist' : 'list';
        Swal.fire({
          title: `Are you sure you want to ${action} this category?`,
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes',
          cancelButtonText: 'No'
        }).then((result) => {
          if (result.isConfirmed) {
            fetch(`/admin/updateCategoryStatus/${categoryId}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ isUnlisted })
            })
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to update category status');
              }
              return response.json();
            })
            .then(data => {
              Swal.fire(
                'Updated!',
                'Category status has been updated.',
                'success'
              );
              window.location.reload();
            })
            .catch(error => {
              console.error('Error updating category status:', error);
              Swal.fire({
                title: 'Error',
                text: error.message,
                icon: 'error',
                confirmButtonText: 'OK'
              });
            });
          }
        });
      }
    </script>
</body>
